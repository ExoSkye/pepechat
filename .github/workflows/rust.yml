name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  x86-build:
    runs-on: ubuntu-20.04
    name: x86 Build

    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- --profile minimal -y
          cd ${{github.workspace}}
          cargo build
          cargo test

  other-arch-build:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        arch: [armv7, aarch64, s390x, ppc64le, riscv64]
    
    name: Non x86 Build
    
    steps:
      - uses: actions/checkout@v2
      - uses: ProtoByter/run-on-arch-action@v2.1.4
        name: Build artifact
        id: build
        with:
          arch: ${{ matrix.arch }}
          distro: alpine_latest

          githubToken: ${{ github.token }}
          
          # Will add artifact support later
          
          #setup: |
          #  mkdir -p "${PWD}/artifacts"
          #
          #dockerRunArgs: |
          #  --volume "${PWD}/artifacts:/artifacts"
          #
          #
          #env: |
          #  artifact_name: git-${{ matrix.distro }}_${{ matrix.arch }}

          shell: /bin/sh
          
          install: |
            apk add cmd:curl
            curl https://sh.rustup.rs -sSf | sh -s -- --profile minimal -y
            
          run: |
            git clone https://github.com/ProtoByter/pepechat
            cd pepechat
            cargo build
            cargo test
            
          
